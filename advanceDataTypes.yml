student: !!seq
 - marks
 - name
 - roll_no

# similarly, like this also -
cities: [new delhi, mumbai]

# some of the keys of the seq will be empty 
# sparse seq
spare seq:
 - hey
 - how
 - 
 - Null
 - sup

# nested sequence
-
 - mango                          
 - apple                          
 - banana
-
 - marks
 - roll num
 - date

# corresponding Json output for nested sequence 
# [
#     [
#         "mango",
#         "apple",
#         "banana"
#     ],
#     [
#         "marks",
#         "roll num",
#         "date"
#     ]
# ]

# key: value pairs are called maps
!!map

# nested mappings: map within an map
name: Kunal Kushwaha
role:
  age: 78
  job: student

# same as - 
name: Kunal Kushwaha
role: {age: 78, job: student}

# pairs: keys may have duplicate values
# !!pairs

pair example: !!pairs
 - job: student
 - job: teacher
# this will be an array of hastables

# same as 
pair example: !!pairs [job: student, job: teacher]
# this will be an array of hastables

# !!set will allow you to have unique values
names: !!set
  ? Kunal
  ? Apoorva
  ? Rahul

# dictionary !!omap
people: !!omap
  - Kunal:
      name: Kunal Kushwaha
      age: 86
      height: 444
  - Rahul:
      name: Rahul OP
      age: 50
      height: 343

# reusing some properties
likings:
  fav fruit: mango